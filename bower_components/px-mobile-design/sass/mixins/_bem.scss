///
$elementSeparator: '__';

///
$modifierSeparator: '--';

///
@function containsModifier($selector) {
  $selector: selectorToString($selector);
  @if str-index($selector, $modifierSeparator) {
     @return true;
  }
  @else {
     @return false;
  }
}

///
@function selectorToString($selector) {
  $selector: inspect($selector); //cast to string
  $selector: str-slice($selector, 2, -2); //remove brackets
  @return $selector;
}

///
@function getBlock($selector) {
  $selector     : selectorToString($selector);
  $modifierStart: str-index($selector, $modifierSeparator) - 1;
  @return str-slice($selector, 0, $modifierStart);
}

///
@mixin b($block) {
  .#{$block} {
    @content;
  }
}

///
@mixin e($element) {
  $selector: &;
  @if containsModifier($selector) {
    $block: getBlock($selector);
    @at-root {
      #{$selector}{
          @content;
        
      }
    }
  }
  @else {
     @at-root{
      #{$selector+$elementSeparator+$element}{
        @content;
      }
    }
  }
}

///
@mixin m($modifier) {
   @at-root{
    #{ &}#{$modifierSeparator+$modifier} {
      @content;
    }
  }
}

/// Block Modifier
/// @access public
/// @param {String} $modifier - Modifier's name
/// @example
///     @include modifier('modifier') {
///        // CSS declarations for .block--modifier
///        @include element('element') {
///           // CSS declarations for .block--modifier__element
///        }
///     }
@mixin modifier($modifier) {
   @include m($modifier){
    @content;
  }
}


/// Block Element
/// @access public
/// @param {String} $element - Element's name
/// @example
///    .block {
///      // CSS declarations for .block
///      @include element('element') {
///           //CSS declarations for .block__element
///      }
///
///      @include modifier('modifier') {
///          // CSS declarations for .block--modifier
///
///          @include element('element') {
///              // CSS declarations for .block--modifier__element
///          }
///      }
///   }
///
@mixin element($element) {
   @include e($element){
    @content;
  }
}

/// Block
/// @access public
/// @param {String} $element - Block's name
/// @example
///    @include block('block') {

///      // CSS declarations for .block
///      @include element('element') {
///           //CSS declarations for .block__element
///      }
///
///      @include modifier('modifier') {
///          // CSS declarations for .block--modifier
///
///          @include element('element') {
///              // CSS declarations for .block--modifier__element
///          }
///      }
///   }
///
@mixin block($block) {
   @include b($block){
    @content;
  }
}

/// Content block - add ::content to selector
@mixin c($selector){
  @debug"Adding #{$selector} ::content";
   @at-root{
    #{ &} ::content #{$selector},
    #{ &} #{$selector}{
      @content;
    }
  }
}
